很多时候，技术人员加入一个项目团队，大部分都不是从0开始，作为一个技术人员面对很多老系统，一堆代码，一堆文档，怎么去把这个系统梳理清楚，是摆在技术人员面前的一个难题。下面我提供一个思路，供大家参考。从两个业务，技术角度给出研究关键点。
（一）业务方面
1.先理清核心业务流程逻辑关系，接口情况。
关注核心业务流程，业务场景。
2.各个系统接口画出一张图（接口设计文档）。
通过一张图理出各个系统之间数据传递关系。
3.找到各个系统操作手册。
各个系统的操作手册，便于了解各个系统业务操作顺序。
4.总体系统架构文档。
全局把握各个系统的架构，每个系统或模块的作用。
5.资源文档（系统的部署的IP地址，登陆密码，关键支持工具）。
掌握各个系统的部署地址，方便随时查看系统，登陆到后台查看数据存储情况及系统日志。
6.业务操作管理规范规章制度。
从行业规章制度上了解外围业务知识，更容易理解系统设计的逻辑。
7.上线发布部署文档。
方便查阅系统变更历史情况。
8.各个系统数据流图。
从后台数据角度把握，系统间或模块间数据交互。
9.各个表单（表单号编号规则），表单之间关系。
以表单为主线，站在从业务人员，管理人员，领导决策人员角度，关注表单的数据处理，存储，展示情况。


（二）技术方面
1.框架。
了解系统的技术架构（SSH，SSM）前台JSP，后台JAR包版本。
2.数据库（主键，外键关系，每个系统涉及的核心表，编号规则，存储过程视图）。
3.熟练操作。
先根据模拟用户或管理员用户登录到现有系统，去实地操作。
4.业务流程对应功能数据流（待办事宜，状态码）。
关注业务流程对应的功能点，查看表单数据状态的变化，如有待办事宜，跟踪待办事宜的涉及到的角色用户处理情况。
5.各个系统间接口。
从技术角度，分析系统间接口的实现。
6.积累优秀代码片段，模块。
分析现有系统代码，发现优秀代码实现，积累起来备用。例如：excel导入导出，文件上传等代码。
7.算法（计算逻辑，条件）。
特别关注表单中金额或数字的计算处理。关键函数的输入输出。关键函数的分支判断条件。
8.设计一般思路方法。
例如：很多系统中都有显示树状结构的实现代码，结合业务分析实现思路。
9.代码管理（配置，协作）。
关注现有系统使用的源代码管理工具，是否有版本管理，如果没有说明原有系统版本管理混乱。需要及时把现有系统最新代码管理起来。

---------------------

本文来自 管理大亨 的CSDN 博客 ，全文地址请点击：https://blog.csdn.net/zhaoyu008/article/details/75252235?utm_source=copy 